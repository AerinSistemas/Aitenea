"""
Django settings for aitenea_api project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os, sys
from corsheaders.defaults import default_headers

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Se incluye en el path de python el directorio de aitenea, para poder hacer los imports dentro de Pline
#sys.path.append(os.path.abspath(os.path.join(os.path.abspath(__file__), '../../../..', '/opt/aitenea/')))
#sys.path.append(os.path.abspath(os.path.join(os.path.abspath(__file__))))
sys.path.append('/opt/')
sys.path.append('/opt/aitenea/')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4fdo(=&a47bid02-w28+$5qovu^ogveye7h&p8b_3@nd-cbc4b'
DB_IP = os.getenv('DB_IP')
DB_PORT = os.getenv('DB_PORT')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    'content-disposition',
]
# NO a√±adir tabulaciones al array, el contenido se controla mediante el scrit config_env.sh
CORS_ORIGIN_WHITELIST = [
    'http://localhost:1880',
    'http://localhost:7000',
    'http://localhost:6379',
    'http://127.0.0.1:1880',
    'http://127.0.0.1:7000',
    'http://127.0.0.1:6379',
    'http://172.61.0.6:7000',
    'http://172.61.0.10:1880',
    'http://172.61.0.8:6379',
    'http://0.0.0.0:7000',
    'http://0.0.0.0:1880',
    'http://0.0.0.0:6379',
]


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'corsheaders',
    'docs',
]

PROJECT_APPS = [
    'frontend',
    'accounts',
    'pline',
    'reports',
]

HELPER_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'knox',
    'drf_spectacular'
]

INSTALLED_APPS = DJANGO_APPS + PROJECT_APPS + HELPER_APPS

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FileUploadParser'
    ),
    'DEFAULT_METADATA_CLASS': 'rest_framework.metadata.SimpleMetadata'
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'aitenea_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'aitenea_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': "aitenea",
        'USER': "root",
        'PASSWORD': "maLe2K21",
        'HOST': DB_IP,
        'PORT': DB_PORT,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


SPECTACULAR_SETTINGS = {
    'TITLE': 'AITenea API',
    'DESCRIPTION': 'API to simplify usage of ML algorithms',
    'VERSION': '1.0.0',
    # OTHER SETTINGS
}

DOCS_ROOT = os.path.join(BASE_DIR, '../docs/_build/html')
DOCS_ACCESS = 'public'
